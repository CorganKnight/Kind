TestSuite.show.test(name: String, result: Maybe<String>): String
  String.concat(name, case result {
    none: ": "|Kind.Code.color("32", "pass ✓")
    some: ": "|Kind.Code.color("31", "fail ✗")|" \""|result.value|"\""
  })

//TestSuite.show.check_fail(s: TestSuite): String
//  case s {
//    unit: 
//      case s.result as res {
//        none: ""
//        some: res.value
//      }
//    many: 
//      let result = "\n--> "|s.name|" failed in: \n"
//      for test in s.list with result:
//        result|TestSuite.show.check_fail(test)
//      result
//  }
//  
//TestSuite.show.log(name: String, test: String, expected: String, got: String): String
//  "\n["|name|"] test: "|test|"\nexpected: "|expected|"\ngot: "|got
//
//TestSuite.show.log_string(name: String, test: String, expected: String, got: String): TestSuite
//  let res = 
//    if String.eql(expected, got) 
//    then Maybe.none! 
//    else Maybe.some!(TestSuite.show.log(name, test, expected, got))
//  TestSuite.unit(name, res)
