type App.GG.Attributes {
  new(
    hp:I32
    energy:I32
    damage:I32
    corruption: I32
  )
}


App.GG.Attributes.add(
  a: App.GG.Attributes
  b: App.GG.Attributes
): App.GG.Attributes

  let hp = a@hp + b@hp
  let energy = a@energy + b@energy
  let damage = a@damage + b@damage
  let corruption = a@corruption + b@corruption
  App.GG.Attributes.new(hp, energy, damage, corruption)

App.GG.Attributes.pure: App.GG.Attributes
  App.GG.Attributes.new(
    0
    0
    0
    0
  )

App.GG.Attributes.base: App.GG.Attributes
  App.GG.Attributes.new(
    25 // hp
    25 // energy
    25 // damage
    25 // corruption
  )

App.GG.Attributes.change_hp(val: I32, attributes: App.GG.Attributes): App.GG.Attributes
  let new_hp = attributes@hp + val
  attributes@hp <- new_hp

App.GG.Attributes.change_energy(val: I32, attributes: App.GG.Attributes): App.GG.Attributes
  let new_energy = attributes@energy + val
  attributes@energy <- new_energy

App.GG.Attributes.change_damage(val: I32, attributes: App.GG.Attributes): App.GG.Attributes
  log("old damage = "| I32.show(attributes@damage))
  let new_damage = attributes@damage + val
  log("damage revamp = "| I32.show(new_damage))
  attributes@damage <- new_damage

App.GG.Attributes.change_corruption(val: I32, attributes: App.GG.Attributes): App.GG.Attributes
  let new_corruption = attributes@corruption + val
  attributes@corruption <- new_corruption

App.GG.Attributes.show(attribute: App.GG.Attributes): String
  let show = I32.show

  "Hp: " | show(attribute@hp) | " | " |
  "Energy: " | show(attribute@energy) | " | " |
  "Damage: " | show(attribute@damage) | " | " |
  "Corruption: " | show(attribute@corruption)
