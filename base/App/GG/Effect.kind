// Effect has been changed to receive App.GG.State.game instead of App.GG.Grid
// This has been done because some effects might change turn bar's progress time, or that needed
//   random numbers obtained from Time.

App.GG.Effect(A: Type): Type
  App.GG.Coord ->
  App.GG.Effect.Origin ->
  App.GG.Game ->
  App.GG.Effect.Result(A)

type App.GG.Effect.Origin {
  creature
  projectile(id: Nat)
}

App.GG.Effect.vbox_unchanged(img: VoxBox): VoxBox
  img

type App.GG.Effect.Result<A: Type> {
  err
  new(
    value: A,
    center: App.GG.Coord
    origin: App.GG.Effect.Origin
    game: App.GG.Game
    img: Bool -> VoxBox -> VoxBox
    energy_cost: I32 
    description: String
  )
}


App.GG.Effect.bind<A: Type, B: Type>(
  effect: App.GG.Effect<A>
  next: A -> App.GG.Effect<B>
): App.GG.Effect<B>

  (center, origin, game)
  let a = effect(center, origin, game)
  case a {
    err: App.GG.Effect.Result.err<B>
    new: case next(a.value)(a.center, a.origin, a.game) as b {
      err: App.GG.Effect.Result.err<B>
      new: 
        let center      = b.center
        let value       = b.value
        let origin      = b.origin
        let game        = b.game
        let img         = (enemy: Bool, img: VoxBox) b.img(enemy, a.img(enemy, img))
        let energy_used = a.energy_cost + b.energy_cost
        let description = b.description
        App.GG.Effect.Result.new<B>(value, center, origin, game, img, energy_used, description)
    }
  }

App.GG.Effect.monad: Monad(App.GG.Effect)
  Monad.new<App.GG.Effect>(App.GG.Effect.bind, App.GG.Effect.pure)

App.GG.Effect.pure<A: Type>(value: A): App.GG.Effect<A>
  (center, origin, game)
  App.GG.Effect.Result.new<A>(value, center, origin, game, (enemy, img) img, 0, "")