Nat.square_sum(a:Nat, b: Nat): Nat.pow(a+b,2) == Nat.pow(a,2) + Nat.pow(b,2) + Nat.double(a*b)
  let h = Nat.reflexivity(Nat.pow(a+b,2))
  let h1 = h :: rewrite X in (Nat.pow(a+b,2) == X) with Nat.pow.pow_square(a+b)
  let h2 = h1 :: rewrite X in (Nat.pow(Nat.add(a,b),2) == X) with Nat.mul.distrib_right(a,b,a+b)
  let h3 = h2 :: rewrite X in (Nat.pow(Nat.add(a,b),2) == Nat.add(X,Nat.mul(b,Nat.add(a,b)))) with Nat.mul.distrib_left(a,a,b)
  let h4 = h3 :: rewrite X in (Nat.pow(Nat.add(a,b),2) == Nat.add(Nat.add(Nat.mul(a,a),Nat.mul(a,b)),X)) with Nat.mul.distrib_left(b,a,b)
  let h5 = h4 :: rewrite X in (Nat.pow(Nat.add(a,b),2) == Nat.add(Nat.add(Nat.mul(a,a),Nat.mul(a,b)),Nat.add(X,Nat.mul(b,b)))) with Nat.mul.comm(b,a)
  let h6 = h5 :: rewrite X in (Nat.pow(Nat.add(a,b),2) == Nat.add(Nat.add(X,Nat.mul(a,b)),Nat.add(Nat.mul(a,b),Nat.mul(b,b)))) with mirror(Nat.pow.pow_square(a))
  let h7 = h6 :: rewrite X in (Nat.pow(Nat.add(a,b),2) == Nat.add(Nat.add(Nat.pow(a,2),Nat.mul(a,b)),Nat.add(Nat.mul(a,b),X))) with mirror(Nat.pow.pow_square(b))
  let h8 = h7 :: rewrite X in (Nat.pow(Nat.add(a,b),2) == X) with Nat.add.assoc(Nat.pow(a,2),Nat.mul(a,b),Nat.add(Nat.mul(a,b),Nat.pow(b,2)))
  let h9 = h8 :: rewrite X in (Nat.pow(Nat.add(a,b),2) == Nat.add(Nat.pow(a,2),X)) with mirror(Nat.add.assoc(Nat.mul(a,b),Nat.mul(a,b),Nat.pow(b,2)))
  let h10 = h9 :: rewrite X in (Nat.pow(Nat.add(a,b),2) == Nat.add(Nat.pow(a,2),Nat.add(X,Nat.pow(b,2)))) with Nat.double_add(a*b)
  let h11 = h10 :: rewrite X in (Nat.pow(Nat.add(a,b),2) == Nat.add(Nat.pow(a,2),X)) with Nat.add.comm(Nat.double(Nat.mul(a,b)),Nat.pow(b,2))
  h11